services:
  rest:
    init: true
    tty: true
    build:
      context: .
      dockerfile: ./RestAPI/Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      rabbitmq:
        condition: service_healthy

  web:
    image: nginx
    ports:
      - "80:80"
    volumes:
      - ./FrontEnd:/usr/share/nginx/html
    command: ["nginx", '-g', 'daemon off;']

  postgres:
    image: postgres:16
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=postgres
      - POSTGRES_HOST=host.docker.internal
      - POSTGRES_PORT=5432
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
    command:
        - postgres
        - -c
        - listen_addresses=*

  adminer:
    image: adminer
    ports:
      - "9091:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres

  rabbitmq:
      image: rabbitmq:3-management-alpine
      container_name: rabbitmq
      environment:
        - RABBITMQ_DEFAULT_USER=user
        - RABBITMQ_DEFAULT_PASS=password
      ports:
        - "5672:5672"
        - "9093:15672"
      healthcheck:
        test: rabbitmq-diagnostics -q check_port_listener 5672
        interval: 10s
        timeout: 10s
        retries: 3

  ocrworker:
    init: true
    tty: true
    build:
      context: .
      dockerfile: ./OcrWorker/Dockerfile
    ports:
      - "8082:8082"
    volumes:
      - ./OcrWorker:/app/src/OcrWorker
    depends_on:
      rabbitmq:
        condition: service_healthy

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9090:9090"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9090"
    volumes:
      - minio-data:/data

  elastic_search:
    image: elasticsearch:8.7.1
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "xpack.security.enabled=false"
      - "xpack.security.enrollment.enabled=false"
      #- "logger.level=INFO"
      - "logger.level=ERROR"
    # ulimits:
    #   memlock:
    #     soft: -1
    #     hard: -1
    ports:
      - 9200:9200
      - 9300:9300

  kibanba:
    image: docker.elastic.co/kibana/kibana:8.2.3
    ports:
      - 9092:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://elastic_search:9200
      - XPACK_SECURITY_ENABLED=false
      #- "logger.level=INFO"
      - "logger.level=ERROR"
    depends_on:
      - elastic_search

# manage the volume which is named db
volumes:
  db:
  minio-data:
